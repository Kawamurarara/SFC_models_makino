#牧野好洋 著(2016)「ストック・フローモデルに基づく動学マクロ経済分析」、環境と経営：静岡産業大学論集、p.39-54をpythonで実装した
##変数
#生産
X = [[200, 250, 400, 500, 400]]
x = [[[16, 23, 9, 2, 10],
     [17, 24, 0, 40, 14],
     [18, 26, 78, 54, 54],
     [19, 28, 93, 140, 15],
     [20, 29, 90, 124, 55]]]
#付加価値
y_p = [[110, 120, 130, 140, 252]]
Y = [752]
#可処分所得
YD = [652]
YD_e = [652]
#税金
T = [115]
#消費
C = [652]
c_p = [[135, 145, 155, 185, 32]]

##外生変数
#政府支出
G = 100
g_p = [5, 10, 15, 20, 50]
#利子率
r = 0.025

##先決内生変数
#正味資産残高
V = [800]
V_e = [800]
#債権
B_d = [600]
B_h = [600]
B_s = [800]
B_cb = [200]
ΔB_h = [0]
ΔB_s = [0]
ΔB_cb = [0]
#準備預金
H_d = [200]
H_s = [200]
H_h = [200]
ΔH_s = [0]

##パラメター
#投入係数
a = [[16/200, 23/250, 9/400, 2/500, 10/400],
     [17/200, 24/250, 0, 40/500, 14/400],
     [18/200, 26/250, 78/400, 54/500, 54/400],
     [19/200, 28/250, 93/400, 140/500, 15/400],
     [20/200, 29/250, 90/400, 124/500, 55/400]]
#付加価値率
v = [110/200, 120/250, 130/400, 140/500, 252/400]
#消費シェア
c = [135/652, 145/652, 155/652, 185/652, 32/652]
#税率
θ = 115/767
#消費・可処分所得(期首の期待)に関するパラメター
α_1 = 3/4
#消費・[期首]正味資産残高に関するパラメター
α_2 = 163/800
#貨幣需要・定数項
λ_0 = 0.752
#貨幣需要・資産需要に関するパラメター
λ_1 = 0.900
#資産需要・取引需要に関するパラメター
λ_2 = 0.030

##各産業における生産額を求めるための行列
#生産額を求めるための行列A
A = [[1 - a[0][0], -a[0][1], -a[0][2], -a[0][3], -a[0][4]],
     [-a[1][0], 1 - a[1][1], -a[1][2], -a[1][3], -a[1][4]],
     [-a[2][0], -a[2][1], 1 - a[2][2], -a[2][3], -a[2][4]],
     [-a[3][0], -a[3][1], -a[3][2], 1 - a[3][3], -a[3][4]],
     [-a[4][0], -a[4][1], -a[4][2], -a[4][3], 1 - a[4][4]]]
#消費と政府支出を足し合わせた列ベクトル
B = [[140, 155, 170, 205, 82]]

def model(X, x, y_p, Y, YD, YD_e, T, C, c_p, G, g_p, r, V, V_e, B_d, B_h, B_s, B_cb, ΔB_h, ΔB_s, ΔB_cb, H_d, H_s, H_h, a, v, c, θ, α_1, α_2, λ_0, λ_1, λ_2, A, B, t):
    B.append([])
    x.append([])
    y_p.append([])
    c_p.append([])

    #期待可処分所得を求める
    YD_e.append(YD[-1])
    #消費総額を求める
    C.append(α_1 * YD_e[-1] + α_2 * V[-1])
    #各産業における消費額を求める
    for i in range(5):
        c_p[t].append(C[-1] * c[i])
    #消費と政府支出の和を求める
    for i in range(5):
        B[t].append(g_p[i] + c_p[t][i])
    #各産業における生産額を求める
    X.append(solve(A, B[t]).tolist())
    #各産業における中間投入を求める
    for i in range(5):
        x[t].append([])
        for j in range(5):
            x[t][i].append(a[i][j] * X[t][j])
    #各産業における付加価値を求める
    for i in range(5):
        y_p[t].append(v[i] * X[t][i])
    #付加価値の総額を求める
    Y.append(sum(y_p[t]))
    #税金を求める
    T.append(θ * (Y[-1] + r * B_h[-1]))
    #可処分所得を求める
    YD.append(Y[-1] - T[-1] + r * B_h[-1])
    #期首時点の期末正味資産残高の期待値を求める
    V_e.append(V[-1] + YD_e[-1] - C[-1])
    #期末正味資産残高を求める
    V.append(V[-1] + YD[-1] - C[-1])
    #家計の、期末正味資産残高の期待値を求める
    B_d.append(V_e[-1] *(λ_0 + λ_1 * r) - λ_2 * YD_e[-1])
    #家計の、債券保有割合の計画値
    H_d.append(V_e[-1] - B_d[-1])
    #家計は期末に計画通り、債券を保有する
    B_h.append(B_d[-1])
    #家計は、期末における正味資産残高の期待値と実際値のずれを、貨幣保有残高により調整する
    H_h.append(V[-1] - B_h[-1])
    #家計・債券保有純増を求める
    ΔB_h.append(B_h[-1] - B_h[-2])
    #政府の新たな債券発行額を求める
    ΔB_s.append(G + r * B_s[-1] - (T[-1] + r * B_cb[-1]))
    #政府の、期末の債券発行残高を求める
    B_s.append(B_s[-1] + ΔB_s[-1])
    #中央銀行による買いオペ
    B_cb.append(B_s[-1] - B_h[-1])
    #中央銀行・債券保有純増を求める
    ΔB_cb.append(B_cb[-1] - B_cb[-2])
    #期末の貨幣発行残高を求める
    H_s.append(H_s[-1] + ΔB_cb[-1])
    #中央銀行・貨幣発行純増を求める
    ΔH_s.append(H_s[-1] - H_s[-2])
